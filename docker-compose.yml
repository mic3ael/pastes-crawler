version: '3.8'
services:
  localstack:
    image: localstack/localstack:1.2.0
    container_name: crawlers_localstack
    ports:
      - '4510-4559:4510-4559' # external service port range
      - '4566:4566'
    environment:
      - DEFAULT_REGION=${AWS_REGION}
      - SERVICES=lambda,sqs,dynamodb,s3
      # - DEBUG=1
      - LAMBDA_EXECUTOR=docker
      - LAMBDA_REMOTE_DOCKER=true
      - LAMBDA_REMOVE_CONTAINERS=true
      - DATA_DIR=/tmp/localstack/data
      - DOCKER_HOST=unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - crawler
  dynamodbAdmin:
    image: aaronshaf/dynamodb-admin:4.5.0
    container_name: crawlers_dynamodbAdmin
    ports:
      - 8001:8001
    environment:
      DYNAMO_ENDPOINT: 'http://localstack:4566'
      AWS_REGION: ${AWS_REGION}
    depends_on:
      - localstack
    networks:
      - crawler
  redis:
    image: redis:7.0.5-alpine
    container_name: crawlers_redis
    restart: always
    ports:
      - 6379:6379
    entrypoint: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD} --maxmemory 512mb --maxmemory-policy allkeys-lru
    networks:
      - crawler
      - cache
    volumes:
      - ./volume/redis:/var/lib/redis/data
  redisinsight:
    image: redislabs/redisinsight:1.13.1
    container_name: crawlers_redisinsight
    depends_on:
      - redis
    ports:
      - '8002:8001'
    volumes:
      - ./volume/redisinsight:/db
    networks:
      - cache
  crawlers:
    build:
      context: ./
      target: local
    container_name: crawlers_crawlers
    restart: always
    depends_on:
      - localstack
      - redis
    volumes:
      - .:/src
    networks:
      - crawler
networks:
  crawler:
    external: false
    driver: bridge
    name: crawler
  cache:
    external: false
    driver: bridge
    name: crawler_cache
